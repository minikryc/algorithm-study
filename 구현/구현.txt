구현 핵심 : 문제 풀이 방법 파악하고, 이걸 프로그래밍 언어로 확실히 구현해야 한다.

구현이 까다로운 문제 유형 :
- 알고리즘은 간단한데 코드가 너무 길어지는 문제
- 특정 소수점 자리까지 출력해야 하는 문제
- 문자열이 입력으로 주어졌을때 한 문자 단위로 파싱해 리스트에 넣어야 하는 문제
- 사소한 조건 설정이 많은 문제

구현의 흔한 유형 : 
- 완전 탐색 : 모든 경우의 수를 다 계산하여 해결해야 하는 유형
- 시뮬레이션 : 문제에서 제시한 알고리즘을 한 단계씩 차례대로 직접 수행해야 하는 유형
- API 개발 문제.. (카카오 공채에 나옴)

파이썬의 주의사항 : 
- 파이썬의 자료형은 직접 지정할 필요 없어 매우 큰 수의 연산도 기본 지원
- 보통 코테에서는 128~512 GB 메모리를 제한하기 때문에 파이썬의 리스트 길이에 주의해야 함
- 파이썬은 C/C++에 비해 동작 속도가 느림
- 시간 제한, 데이터 개수를 먼저 확인후 어느 정도의 시간 복잡도의 알고리즘을 사용할수 있을지 예측할수 있어야 함
- pypy3은 파이썬3의 문법을 그대로 지원하지만, 대부분 실행 속도가 더 빠름